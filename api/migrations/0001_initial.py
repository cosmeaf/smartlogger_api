# Generated by Django 5.1 on 2024-10-24 09:53

import api.models
import datetime
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('in_manutenance', models.BooleanField(default=False)),
                ('hdr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Header')),
                ('report_map', models.CharField(blank=True, max_length=255, null=True, verbose_name='Report Map')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Model')),
                ('software_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Software Version')),
                ('message_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Message Type')),
                ('date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Date')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('speed_gps', models.FloatField(blank=True, null=True, verbose_name='Speed GPS (Km/h)')),
                ('course', models.CharField(blank=True, max_length=50, null=True, verbose_name='Course')),
                ('satellites', models.IntegerField(blank=True, null=True, verbose_name='Satellites')),
                ('gps_fix_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='GPS Fix Status')),
                ('input_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Input State')),
                ('output_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Output State')),
                ('mode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mode')),
                ('report_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Report Type')),
                ('message_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Message Number')),
                ('reserved', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reserved')),
                ('assign_map', models.CharField(blank=True, max_length=255, null=True, verbose_name='Assign Map')),
                ('power_voltage', models.FloatField(blank=True, null=True, verbose_name='Power Voltage')),
                ('battery_voltage', models.FloatField(blank=True, null=True, verbose_name='Battery Voltage')),
                ('connection_rat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Connection RAT')),
                ('acceleration_x', models.FloatField(blank=True, null=True, verbose_name='Acceleration X')),
                ('acceleration_y', models.FloatField(blank=True, null=True, verbose_name='Acceleration Y')),
                ('acceleration_z', models.FloatField(blank=True, null=True, verbose_name='Acceleration Z')),
                ('adc_value', models.FloatField(blank=True, null=True, verbose_name='ADC Value')),
                ('gps_odometer', models.FloatField(blank=True, null=True, verbose_name='GPS Odometer')),
                ('trip_distance', models.FloatField(blank=True, null=True, verbose_name='Trip Distance')),
                ('horimeter', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Horimeter')),
                ('trip_horimeter', models.FloatField(blank=True, null=True, verbose_name='Trip Horimeter')),
                ('idle_time', models.FloatField(blank=True, null=True, verbose_name='Idle Time')),
                ('impact', models.FloatField(blank=True, null=True, verbose_name='Impact')),
                ('soc_battery_voltage', models.FloatField(blank=True, null=True, verbose_name='SoC (Battery Voltage)')),
                ('calculated_temperature', models.FloatField(blank=True, null=True, verbose_name='Calculated Temperature')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_manutenance', models.BooleanField(default=False, editable=False)),
                ('initial_hour_machine', models.FloatField(default=0, verbose_name='Initial Hour Machine')),
                ('initial_hour_suntech', models.FloatField(default=0, editable=False, verbose_name='Initial Hour Suntech')),
                ('worked_hours', models.FloatField(default=0, verbose_name='Worked Hours')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('model', models.CharField(blank=True, default='N/A', max_length=255, null=True, verbose_name='Model')),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='api.device')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=100, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('hire_date', models.DateField(blank=True, null=True, verbose_name='Data de Contratação')),
                ('image', models.ImageField(blank=True, null=True, upload_to=api.models.get_file_path, verbose_name='Foto de Perfil')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='api.equipment', verbose_name='Equipamento')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_hour_suntech', models.FloatField(default=0, verbose_name='Initial Suntech Hour')),
                ('initial_hour_maintenance', models.FloatField(default=0, verbose_name='Initial Maintenance Hour')),
                ('worked_hours', models.FloatField(default=0, verbose_name='Worked Hours')),
                ('alarm_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('remaining_hours', models.FloatField(default=0, verbose_name='Remaining Hours')),
                ('name', models.CharField(max_length=255)),
                ('os', models.BooleanField(default=False)),
                ('obs', models.TextField(blank=True, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='api.equipment')),
            ],
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['device', 'name'], name='api_equipme_device__dea076_idx'),
        ),
    ]
