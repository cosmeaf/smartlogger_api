# Generated by Django 5.1 on 2024-09-30 10:00

import api.models
import datetime
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('in_manutenance', models.BooleanField(default=False)),
                ('hdr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Header')),
                ('report_map', models.CharField(blank=True, max_length=255, null=True, verbose_name='Report Map')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Model')),
                ('software_version', models.CharField(blank=True, max_length=50, null=True, verbose_name='Software Version')),
                ('message_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Message Type')),
                ('date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Date')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('speed_gps', models.FloatField(blank=True, null=True, verbose_name='Speed GPS (Km/h)')),
                ('course', models.CharField(blank=True, max_length=50, null=True, verbose_name='Course')),
                ('satellites', models.IntegerField(blank=True, null=True, verbose_name='Satellites')),
                ('gps_fix_status', models.CharField(blank=True, max_length=50, null=True, verbose_name='GPS Fix Status')),
                ('input_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Input State')),
                ('output_state', models.CharField(blank=True, max_length=255, null=True, verbose_name='Output State')),
                ('data_length', models.IntegerField(blank=True, null=True, verbose_name='Data Length')),
                ('driver_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Driver ID')),
                ('instant_speed', models.FloatField(blank=True, null=True, verbose_name='Instant Speed')),
                ('peak_speed', models.FloatField(blank=True, null=True, verbose_name='Peak Speed')),
                ('instant_temperature', models.FloatField(blank=True, null=True, verbose_name='Instant Temperature')),
                ('peak_temperature', models.FloatField(blank=True, null=True, verbose_name='Peak Temperature')),
                ('mode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Mode')),
                ('report_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Report Type')),
                ('message_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Message Number')),
                ('reserved', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reserved')),
                ('assign_map', models.CharField(blank=True, max_length=255, null=True, verbose_name='Assign Map')),
                ('power_voltage', models.FloatField(blank=True, null=True, verbose_name='Power Voltage')),
                ('battery_voltage', models.FloatField(blank=True, null=True, verbose_name='Battery Voltage')),
                ('connection_rat', models.CharField(blank=True, max_length=50, null=True, verbose_name='Connection RAT')),
                ('acceleration_x', models.FloatField(blank=True, null=True, verbose_name='Acceleration X')),
                ('acceleration_y', models.FloatField(blank=True, null=True, verbose_name='Acceleration Y')),
                ('acceleration_z', models.FloatField(blank=True, null=True, verbose_name='Acceleration Z')),
                ('adc_value', models.FloatField(blank=True, null=True, verbose_name='ADC Value')),
                ('gps_odometer', models.FloatField(blank=True, null=True, verbose_name='GPS Odometer')),
                ('trip_distance', models.FloatField(blank=True, null=True, verbose_name='Trip Distance')),
                ('horimeter', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Horimeter')),
                ('trip_horimeter', models.FloatField(blank=True, null=True, verbose_name='Trip Horimeter')),
                ('idle_time', models.FloatField(blank=True, null=True, verbose_name='Idle Time')),
                ('impact', models.FloatField(blank=True, null=True, verbose_name='Impact')),
                ('soc_battery_voltage', models.FloatField(blank=True, null=True, verbose_name='SoC (Battery Voltage)')),
                ('calculated_temperature', models.FloatField(blank=True, null=True, verbose_name='Calculated Temperature')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_manutenance', models.BooleanField(default=False)),
                ('initial_hour_machine', models.FloatField(default=0, verbose_name='Initial Hour Machine')),
                ('total_worked_hours', models.FloatField(default=0, editable=False, verbose_name='Total Worked Hours')),
                ('remaining_hours', models.FloatField(default=0.0, editable=False, verbose_name='Remaining Hours')),
                ('alarm_hours', models.FloatField(default=0.0, verbose_name='Alarm Hours')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('year', models.IntegerField(blank=True, default=api.models.current_year, null=True, verbose_name='Year')),
                ('model', models.CharField(blank=True, default='N/A', max_length=255, null=True, verbose_name='Model')),
                ('measuring_point', models.CharField(blank=True, default='N/A', max_length=255, null=True, verbose_name='Measuring Point')),
                ('fuel', models.CharField(blank=True, default='DIESEL', max_length=8, null=True, verbose_name='Fuel')),
                ('pulse_number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Pulse Number')),
                ('tire_perimeter', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Tire Perimeter (cm)')),
                ('available_hours_per_month', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Available Hours per Month')),
                ('average_consumption', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Average Consumption (m³/h - L/h - Kg/h)')),
                ('speed_alert', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Speed Alert (km/h)')),
                ('temperature_alert', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Temperature Alert (°C)')),
                ('shock_alert', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Shock Alert (km/h)')),
                ('effective_hours_odometer', models.CharField(blank=True, default='ODOMETER', max_length=255, null=True, verbose_name='Effective Hours or Odometer')),
                ('odometer', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Odometer')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='api.device')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horimetro_inicial_suntech', models.FloatField(default=0, verbose_name='Ajuste de Zero Hora Suntech')),
                ('horimetro_inicial_maintenance', models.FloatField(default=0, verbose_name='AZ Hora Máquina')),
                ('horimetro_acumulado', models.FloatField(default=0, verbose_name='Horímetro Acumulado')),
                ('name', models.CharField(max_length=255)),
                ('os', models.BooleanField(default=False)),
                ('usage_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('alarm_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('obs', models.TextField(blank=True, null=True)),
                ('equipament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='api.equipment')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
            },
        ),
        migrations.AddIndex(
            model_name='equipment',
            index=models.Index(fields=['device', 'name'], name='api_equipme_device__dea076_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenance',
            index=models.Index(fields=['equipament'], name='api_mainten_equipam_64f07c_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenance',
            index=models.Index(fields=['name'], name='api_mainten_name_77bc80_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenance',
            index=models.Index(fields=['os'], name='api_mainten_os_af85a8_idx'),
        ),
    ]
